// Code generated by MockGen. DO NOT EDIT.
// Source: promotion_rules/rules_def.go

// Package mock_promotion_rules is a generated GoMock package.
package mock_promotion_rules

import (
	gomock "github.com/golang/mock/gomock"
	model "promotionengine/model"
	reflect "reflect"
)

// MockPromotionRules is a mock of PromotionRules interface
type MockPromotionRules struct {
	ctrl     *gomock.Controller
	recorder *MockPromotionRulesMockRecorder
}

// MockPromotionRulesMockRecorder is the mock recorder for MockPromotionRules
type MockPromotionRulesMockRecorder struct {
	mock *MockPromotionRules
}

// NewMockPromotionRules creates a new mock instance
func NewMockPromotionRules(ctrl *gomock.Controller) *MockPromotionRules {
	mock := &MockPromotionRules{ctrl: ctrl}
	mock.recorder = &MockPromotionRulesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPromotionRules) EXPECT() *MockPromotionRulesMockRecorder {
	return m.recorder
}

// NofSame mocks base method
func (m *MockPromotionRules) NofSame(n int, productName string, promotionPrice int, cart model.Cart) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NofSame", n, productName, promotionPrice, cart)
	ret0, _ := ret[0].(int)
	return ret0
}

// NofSame indicates an expected call of NofSame
func (mr *MockPromotionRulesMockRecorder) NofSame(n, productName, promotionPrice, cart interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NofSame", reflect.TypeOf((*MockPromotionRules)(nil).NofSame), n, productName, promotionPrice, cart)
}

// CombinationOfTwo mocks base method
func (m *MockPromotionRules) CombinationOfTwo(productA, productB string, promotionPrice int, cart model.Cart) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CombinationOfTwo", productA, productB, promotionPrice, cart)
	ret0, _ := ret[0].(int)
	return ret0
}

// CombinationOfTwo indicates an expected call of CombinationOfTwo
func (mr *MockPromotionRulesMockRecorder) CombinationOfTwo(productA, productB, promotionPrice, cart interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CombinationOfTwo", reflect.TypeOf((*MockPromotionRules)(nil).CombinationOfTwo), productA, productB, promotionPrice, cart)
}
